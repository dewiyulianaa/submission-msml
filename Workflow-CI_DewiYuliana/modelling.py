# -*- coding: utf-8 -*-
"""modelling

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I5fu-NNmB6wCMoWlFRpU_FoeL-6q6_kY
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install mlflow scikit-learn pandas numpy

# modelling.py

# 1. Import library yang dibutuhkan
import pandas as pd
import numpy as np
import mlflow
import mlflow.sklearn
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import os

# 2. Inisialisasi MLflow
mlflow.set_experiment("Prediksi_Karyawan_Resign")

# 3. Muat data hasil preprocessing
# Pastikan file ini berasal dari hasil preprocessing tahap 1
X = pd.read_csv(r"C:\Users\ASUS\Downloads\Submission_MSML\membangun model\X_final.csv")
y = pd.read_csv(r"C:\Users\ASUS\Downloads\Submission_MSML\membangun model\y_final.csv")

# Jika y hanya 1 kolom, perlu dirapikan
y = y.values.ravel()

# 4. Split data train/test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# 5. Melatih model dalam tracking MLflow
with mlflow.start_run():
    # Inisialisasi model
    model = LogisticRegression(max_iter=1000)

    # Melatih model
    model.fit(X_train, y_train)

    # Prediksi
    y_pred = model.predict(X_test)

    # Hitung metrik evaluasi
    acc = accuracy_score(y_test, y_pred)
    prec = precision_score(y_test, y_pred)
    rec = recall_score(y_test, y_pred)
    f1 = f1_score(y_test, y_pred)

    # Logging parameter dan metrik
    mlflow.log_param("model", "LogisticRegression")
    mlflow.log_param("penalty", model.penalty)
    mlflow.log_param("max_iter", model.max_iter)

    mlflow.log_metric("accuracy", acc)
    mlflow.log_metric("precision", prec)
    mlflow.log_metric("recall", rec)
    mlflow.log_metric("f1_score", f1)

    # Logging model
    mlflow.sklearn.log_model(model, "logistic_model")

    print(f"Accuracy: {acc}")
    print(f"Precision: {prec}")
    print(f"Recall: {rec}")
    print(f"F1 Score: {f1}")

    print("Model dan metrik berhasil dicatat ke MLflow.")